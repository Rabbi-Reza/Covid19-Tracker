{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a78665e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate }}) => {\n    // console.log(props);\n    if(! confirmed) {\n        return 'Loading ... '\n    }\n    return (\n        <div className= { styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md = {3} className = { cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom> Infected </Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start= {0} end = {confirmed.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\"> { new Date(lastUpdate).toDateString()} </Typography>\n                        <Typography variant=\"body2\"> Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n\n                <Grid item component={Card} xs={12} md = {3} className = { cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom> Recovered </Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start= {0} end = {recovered.value} duration={2.5} separator=\",\" />  \n                        </Typography>\n                        <Typography color=\"textSecondary\"> { new Date(lastUpdate).toDateString()} </Typography>\n                        <Typography variant=\"body2\"> Number of recoveries cases from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n\n                <Grid item component={Card} xs={12} md = {3} className = { cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom> Deaths </Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start= {0} end = {deaths.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\"> { new Date(lastUpdate).toDateString()} </Typography>\n                        <Typography variant=\"body2\"> Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n\n    if (country) {\n        changeableUrl = `${url}/countries/${country}`;  \n    }\n\n    try {\n\n        const { data: { confirmed, recovered, deaths, lastUpdate } }= await axios.get(changeableUrl);\n\n        return { confirmed, recovered, deaths, lastUpdate }\n        // console.log(data)\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n\n        // console.log(data);\n        const modifiedData = data.map(( dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }))\n\n        return modifiedData\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: { countries }} = await axios.get(`${url}/countries`);\n\n        // console.log(response);\n        return countries.map((country) => country.name );\n    } catch (error) {\n        \n    }\n}","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\n\nconst Chart = ( {data: { confirmed, deaths, recovered}, country} ) => {\n    const [ dailyData, setDailyData ] = useState([]);\n\n    useEffect ( () => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n\n        console.log(dailyData);\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData.length\n        ? (\n        <Line \n            data = {{\n                labels: dailyData.map(({ date }) => date),\n\n                datasets: [{\n                    data: dailyData.map(({ confirmed }) => confirmed ),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true\n                }, {\n                    data: dailyData.map(({ deaths }) => deaths ),\n                    label: 'Deaths',\n                    borderColor: 'red',\n                    backgroundColor: 'rgba(255, 0, 0, 0.5',\n                    fill: true\n                }]\n            }}\n        />) : null\n    );\n\n    console.log(confirmed,recovered, deaths);\n    \n    const barChart = (\n        confirmed\n        ? (\n            <Bar\n                data = {{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: [\n                            'rgba(0, 0, 255, 0.5)',\n                            'rgba(0, 255, 0, 0.5)',\n                            'rgba(255, 0, 0, 0.5)'\n                        ],\n                        data: [confirmed.value, recovered.value, deaths.value]\n                    }]\n                }}\n                options = {{\n                    legend: { display: false},\n                    title: { display: true, text: `Current state in ${country}`}\n                }}\n            />\n        ) : null\n    )\n\n    return (\n        <div className = {styles.container}>\n            { country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n    const [ fetchedCountries, setFetchedCountries ] = useState([]);\n\n    useEffect( () => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n    }, [setFetchedCountries])\n\n    // console.log(fetchedCountries);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue =\"\" onChange= { (e) => handleCountryChange(e.target.value) }>\n                <option value=\"\"> Global</option>\n                { fetchedCountries.map( (country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\n\n// import Cards from './components/Cards/Cards';\n// import Chart from './components/Chart/Chart';\n// import CountryPicker from './components/CountryPicker/CountryPicker';\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nimport coronaImage from './images/image.png';\n\nclass App extends React.Component {\n\n    state = {\n        data: {},\n        country: ''\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n\n        this.setState({ data: fetchedData })\n        // console.log(data);\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        // console.log(country);\n\n        // fetch the data\n        // console.log(fetchedData);\n        // set the state\n        this.setState({ data: fetchedData, country: country});\n\n    }\n\n    render() {\n\n        const { data, country } = this.state;\n        return (\n            <div className={styles.container}>\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\n                <Cards data= {data}/>\n                <CountryPicker handleCountryChange = {this.handleCountryChange}/>\n                <Chart data={data} country={country}/>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};"],"sourceRoot":""}